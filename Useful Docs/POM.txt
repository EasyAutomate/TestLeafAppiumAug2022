Page Object Model

Rules of POM
1. Categorize the class created / to be created in separate package
2. Create a reuseable method class / Wrapper
3. Each and every page should be a separate class
4. Every page should extend the wrapper class
5. Each and every action should be a seperate method
6. Ensure action is performed as expected
6. Every method should return to the page it would land post completion 
7. Verify the page it has landed

Maven project

POM

src/main/java
wrappers
	CommonWrappers.java
		all methods will be available
		all methods should have a return type
pages
	LoginPage.java extends CommonWrappers

		public LoginPage() {
			if(!verifyEleIsDisplayed(WebElement)){
			throw new RunTimeException("Login Page is not displayed");
		}

		public LoginPage enterUN() {
		if(enterData(webElement,data)) {
			syso("Username "+data+" entered sucessfully");	
		} else {
			syse("Username "+data+" is not entered");
		}
		return this;
		}
		public LoginPage enterPwd() {
		if(enterData(webElement,data)) {
			syso("Password "+data+" entered sucessfully");	
		} else {
			syse("Password "+data+" is not entered");
		}
		return this;
		}
	HomePage.java extends CommonWrappers
	....
src/main/resources
src/test/java
testcases
	TC001.java extends CommonWrappers
		public static void main(String[] args) {
		launchApp();
		new LoginPage().enterUN().enterPwd()...............
		}

src/test/resources


Hybrid Framework
src/main/java
utilities
	Reporter.java
	ReadExcelData.java
wrappers
	CommonWrappers.java extends Reporter
		all methods will be available
		all methods should have a return type
	ProjectSpecificWrappers extends CommonWrappers
		@BeforeMethod
		public void bm() {
		launchApp();
		}
pages
	LoginPage.java extends CommonWrappers

		public LoginPage() {
			PageFactory.initElements(new AppiumFieldDecorator(driver),this);
			if(!verifyEleIsDisplayed(WebElement)){
			throw new RunTimeException("Login Page is not displayed");
		}

		@AndroidFindBy(...)
		@iOSXCUITFindby(...)
		@FindBy(...)
		private WebElement userName;

		public LoginPage enterUN(String data) {
		if(enterData(webElement,data)) {
			logReport("PASS", "Username "+data+" entered sucessfully");	
		} else {
			logReport("FAIL", "Username "+data+" is not entered");
		}
		return this;
		}
		public LoginPage enterPwd() {
		if(enterData(webElement,data)) {
			logReport("PASS", "Password "+data+" entered sucessfully");	
		} else {
			logReport("FAIL", "Password "+data+" is not entered");
		}
		return this;
		}
		public LoginPage clickLoginBtnForFailure() {
		click(webElement);
		return this;
		}
		public HomePage clickLoginBtnForSuccess() {
		click(webElement);
		return new HomePage();
		}
		
	HomePage.java extends CommonWrappers
	....
src/main/resources
src/test/java
testcases
	TC001.java extends ProjectSpecificWrappers
	{
		@Test
		public void runTC() {
		new LoginPage().enterUN().enterPwd()...............
	}

src/test/resources


TestNG

	@BeforeSuite
		@BeforeTest
			@BeforeClass
				@BeforeMethod
					@Test
				@AfterMethod
			@AfterClass
		@AfterTest
	@AfterSuite		

XML

<suite
	<test
		<classes>
			<class
		</classes?
	</test>
</suite>

















